# Plantilla PE Julia
# Use a transition matrix approach to calculate the probability

using LinearAlgebra

N = 100; # Number of players
steps = floor(Int32, N/2)+1;

#T_matrix[i, j] is the prob that people at distance j finish at distance i after rolling dice (steps \equiv 0)
T_matrix = zeros(steps, steps);

for ii = 1:steps
    vals = [ii-2, ii-1, ii, ii+1, ii+2];
    
    #vals[vals .< 0] = - vals[vals .< 0];
    probs = [1/36, 8/36, 18/36, 8/36, 1/36];
    if any(vals .== -1)
        vals[vals .== -1] .= 1;
        probs[vals .== 1] .= sum(probs[vals .== 1]);
    end
    if any(vals .>= steps)
        vals[vals .>= steps] = N .- vals[vals .>= steps];
        probs[vals .== steps-2] .= sum(probs[vals .== steps-2]);
        probs[vals .== steps-3] .= sum(probs[vals .== steps-3]);
    end
    vals[vals .== 0] .= steps;
    
    if ii == steps
        vals .= steps-1; vals[3] = steps;
        probs = 0 .* probs; probs[3] = 1;
    end
    T_matrix[ii, vals] = probs;
end

# We form a linear system to solve
# E[X_n] = p_{2} E[X_{n+2}] + p_{1} E[X_{n+1}] + p_{0} E[X_n] + p_{-1} E[X_{n-1}] + p_{-2} E[X_{n-2}] + 1
M = T_matrix[1:(steps-1), 1:(steps-1)] - I
expectedValues = -M\ones(Float64, (steps-1,));


# Assertion block
res = expectedValues[end]
println("El resultado es $res")